Ansible allows for configuration-as-code

1. OpenSSH is installed on controller and agent machines
    -ssh client is installed on controller
    
2. Make connection from controller to server, answer yes to inital connection prompt

3. Create SSH Keypair(with a passphrase) for your normal user account

4. Create SSH Key that is specific to Ansible

Actual Steps/Example

From Controller:

1.ssh into server to register ECDSA key fingerprint

2.run `ssh-keygen -t ed25519 -C "weemin default"`;  store it in default; enter passphrase

3.run `ssh-copy-id -i ~/.ssh/id_ed25519.pub pi@192.168.1.217`      send key to agent, you can check if pub key is sent to agent in their ~/.ssh/authorized_keys file


Generate Ansibile Key

1.`ssh-keygen -t ed25519 -C "ansible"`;     name this key ansible instead of default; dont create passphrase

2.`ssh-copy-id -i ~/.ssh/ansible.pub pi@192.168.1.217`;    send this key to agent

Install Ansible

1. `sudo apt install ansible`

Create inventory file which stores ip addresses of agents/servers

1. `ansible all --key-file ~/.ssh/ansible -i inventory -m ping`  make sure connections are made to the servers listed in inventory

2. if you create an ansible.cfg file in local ansible folder, you can just call `ansible all -m ping`

3. you can list all servers with `ansible all --list-hosts`

4. `ansible all -m gather_facts` verbose list hosts;  add option `--limit 192.168.1.217` to show only limited


Command that make changes/ elevate permissions

#check ansible modules documentation 

`ansible all -m apt -a update_cache=true --become --ask-become-pass` ; `--become --ask-become-pass`  same as running as sudo

`ansible all -m apt -a name=vim-nox --become --ask-become-pass` ; `--become --ask-become-pass`

go to /var/log to check the commands that have been run


Create ansible playbook
eg install_apache.yml

`ansible-playbook --ask-become-pass <playbook name>` to run the playbook
